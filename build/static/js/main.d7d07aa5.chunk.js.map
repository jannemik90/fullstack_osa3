{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","index.js"],"names":["Filter","_ref","value","onChange","react_default","a","createElement","Persons","persons","PersonForm","formOnSubmit","nameValue","nameHandler","numberValue","numberHandler","onSubmit","type","baseUrl","services_persons","axios","get","then","response","data","newPerson","post","id","delete","concat","put","Number","person","onClick","name","number","Notification","_ref2","message","notificationStyle","backgroundColor","color","borderRadius","padding","isErrorMessage","Object","objectSpread","style","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","nameFilter","setNameFilter","_useState9","_useState10","notification","setNotification","_useState11","_useState12","setIsErrorMessage","useEffect","personService","allPersons","addNotification","setTimeout","filteredPersons","map","toLowerCase","includes","src_Number","key","window","confirm","removedPerson","personsCopy","filter","console","log","catch","error","Fragment","src_Notification","components_Filter","event","target","components_PersonForm","preventDefault","personObject","checkedPerson","list","exist","forEach","checkIfExist","addedPerson","createNewPerson","findedPerson","find","changedPerson","updatedPerson","updatePerson","components_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7d07aa5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({value, onChange}) => {\r\n return(\r\n    <div>\r\n        <p>rajaa näytettäviä:</p> \r\n        <input \r\n        value={value} \r\n        onChange={onChange}\r\n        />\r\n    </div>\r\n )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({persons}) => {\r\n    return(\r\n        <div>\r\n            {persons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({formOnSubmit, nameValue, nameHandler, numberValue, numberHandler}) => {\r\n    return(\r\n        <form onSubmit={formOnSubmit}>\r\n        <div>\r\n          <p>nimi:</p> \r\n          <input \r\n          value={nameValue} \r\n          onChange={nameHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>numero:</p> \r\n          <input \r\n          value={numberValue} \r\n          onChange={numberHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">lisää</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson =>{\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) =>{\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default{getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\n\n\nconst Number = ({person, onClick}) => \n<div>\n  <p>{person.name} {person.number} </p> \n  <button onClick={onClick}>Poista</button>\n</div>\n\nconst Notification = ({message, isErrorMessage}) =>{\n  let notificationStyle = {\n    backgroundColor: 'darkgreen',\n    color: 'white',\n    borderRadius: '20px',\n    padding: '20px'\n  }\n  if(isErrorMessage){\n    notificationStyle = {\n      ...notificationStyle,\n      backgroundColor: 'red'\n    }\n  }\n\n  if(message === ''){\n    return null\n  }\n  return(\n    <div style={notificationStyle}>\n      <p>{message}</p>\n    </div>\n  )\n}\n\nconst checkIfExist = (checkedPerson, list) => {\n    let exist = false\n    list.forEach(person =>{\n        if(checkedPerson.name.toLowerCase() === person.name.toLowerCase()){\n            exist = true\n        }\n    })\n    return exist\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ notification, setNotification] = useState('')\n  const [ isErrorMessage, setIsErrorMessage] = useState(true)\n  \n  useEffect(() =>{\n     personService\n     .getAll()\n     .then(allPersons => {\n       setPersons(allPersons)\n     })\n  }, [])\n\n const addNotification = (message, isErrorMessage) =>{\n   setNotification(message)\n   setIsErrorMessage(isErrorMessage)\n   setTimeout(() =>{\n     setIsErrorMessage('')\n     setNotification('')\n   }, 5000)\n } \n\n const updatePerson = personObject => {\n    const findedPerson = persons.find(person => person.name.toLowerCase() === personObject.name.toLowerCase())\n    const changedPerson = {...findedPerson, number: newNumber}\n    personService\n    .update(findedPerson.id, changedPerson)\n    .then(updatedPerson =>{\n      setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n      setNewName('')\n      setNewNumber('')\n      addNotification(`Päivitetty henkilön ${updatedPerson.name} numero`)\n    })\n    .catch(error => {\n      addNotification(`Henkilo ${personObject.name} oli jo poistettu palvelimelta`, true)\n      setPersons(persons.filter(person => person.id !== findedPerson.id))\n    })\n }\n\n const createNewPerson = personObject =>{\n    personService\n    .create(personObject)\n    .then(addedPerson =>{\n      setPersons(persons.concat(addedPerson))\n      setNewName('')\n      setNewNumber('')\n      addNotification(`Lisätty henkilo ${addedPerson.name}`)\n    })\n }\n\n\n  const sendPersonForm = (event) => {\n      event.preventDefault()\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      if(checkIfExist(personObject,persons)){\n         const wantReplace = window.confirm(`${personObject.name} on jo luettelossa, korvataanko vanha uudella numerolla?`)\n         if(wantReplace){\n            updatePerson(personObject)\n         } \n         return\n      }\n      createNewPerson(personObject)\n  }\n\n  const removePerson = (id, name) => {\n    const wantDelete = window.confirm(`Poistetaanko ${name}`)\n    if(wantDelete){\n      personService\n        .remove(id)\n        .then(removedPerson =>{\n          const personsCopy = persons.filter(person => person.id !== id)\n          console.log(personsCopy)\n          setPersons(personsCopy)\n          addNotification(`Poistettu henkilo ${name}`)\n        })\n        .catch(error => {\n          addNotification(`Henkilo ${name} oli jo poistettu palvelimelta`, true)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n      console.log(event.target.value)\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n  \n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n}\n  \n  \n\n  const filteredPersons = persons.map(person => \n    person.name.toLowerCase().includes(nameFilter.toLowerCase()) \n      ? <Number \n        key={person.name} \n        person={person} \n        onClick={() => removePerson(person.id,person.name)} \n        /> \n      : <></>)\n\n  return (\n    <div>\n      <Notification message={notification} isErrorMessage={isErrorMessage}/>\n      <h2>Puhelinluettelo</h2>\n      <Filter value={nameFilter} onChange={handleNameFilterChange} />\n      <PersonForm\n      formOnSubmit={sendPersonForm}\n      nameValue={newName} \n      nameHandler={handleNameChange} \n      numberValue={newNumber} \n      numberHandler={handleNumberChange}\n      />\n      <h2>Numerot</h2>\n      <Persons persons={filteredPersons} />\n    </div>\n  )\n\n}\n\nReactDOM.render(<App />, \n    document.getElementById('root')\n  )\n\nexport default App\n\n"],"sourceRoot":""}